#!/usr/bin/env ruby
# frozen_string_literal: true

GEM_ROOT = File.expand_path("..", __dir__)
LIBRARY_PATH = File.join(GEM_ROOT, "lib")
$LOAD_PATH.unshift(LIBRARY_PATH)

DEBUG = false

if DEBUG
  puts "GEM_ROOT: #{GEM_ROOT}"
  puts "LIBRARY_PATH: #{LIBRARY_PATH}"
  puts "$LOAD_PATH: #{$LOAD_PATH}"
end

require "bundler/setup"
Bundler.require(:default)

require "active_support/core_ext/object/blank"
require "jira/auto/tool"
require "jira/auto/tool/board_controller/options"
require "jira/auto/tool/sprint_controller/options"
require "jira/auto/tool/team_sprint_prefix_mapper/options"

require "optparse"
require "optparse/date"

DISPLAY_HELP_OPTION = "--help"

ARGV << DISPLAY_HELP_OPTION if ARGV.empty?

tool = Jira::Auto::Tool.new

option_parser = OptionParser.new do |parser|
  parser.banner = <<~EOBANNER
    Usage: #{File.basename(__FILE__)} [options]*

  EOBANNER

  parser.on("-h", DISPLAY_HELP_OPTION, "Print this help") do
    puts parser
    exit
  end

  parser.on("--[no-]jira-http-debug", "Enable or disable HTTP debug mode") do |v|
    tool.jira_http_debug = v
  end

  parser.on("--board-name=STRING", String) do |board_name|
    tool.jira_board_name = board_name
  end

  Jira::Auto::Tool::BoardController::Options.add(tool, parser)
  Jira::Auto::Tool::SprintController::Options.add(tool, parser)
  Jira::Auto::Tool::TeamSprintPrefixMapper::Options.add(tool, parser)
end

option_parser.parse!
